{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","myStyle","color","mode","backgroundColor","React","createElement","className","style","id","type","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","data-bs-parent","Navbar","concat","Link","to","title","aria-label","aria-current","about","onClick","toggleMode","role","htmlFor","TextForm","_useState","useState","_useState2","_slicedToArray","text","setText","Fragment","heading","value","onChange","event","target","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","getSelection","removeAllRanges","split","join","filter","element","Alert","height","alert","word","lower","charAt","slice","capitalize","msg","defaultProps","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","Router","basename","body","Routes","Route","exact","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","BrowserRouter"],"mappings":"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","file":"static/js/main.32db112e.chunk.js","sourcesContent":["import React,{/*useState*/} from 'react'\r\n\r\nexport default function About(props) {\r\n /*  const [myStyle, setMyStyle] = useState({\r\n    color:'black',\r\n    backgroundColor:'white' \r\n}) */\r\n\r\nlet myStyle={\r\n    color: props.mode ==='dark'?'white':'#042743',\r\n    backgroundColor: props.mode ==='dark'?'rgb(36 74 104)':'white'\r\n}\r\n\r\n/** const [btnText,setBtnText]=useState(\"Enable Dark Mode\") \r\n \r\n*/\r\n/*\r\n  const toggleStyle=()=>{\r\n    if(myStyle.color ==='black'){\r\n        setMyStyle({\r\n            color:'white',\r\n            backgroundColor:'black',\r\n            border: '1px solid white'\r\n        })\r\n        //setBtnText(\"Enable Light Mode\")\r\n    }\r\n    else{\r\n        setMyStyle({\r\n            color:'black',\r\n            backgroundColor:'white'\r\n        })\r\n      //  setBtnText(\"Enable Dark Mode\")\r\n    }\r\n}\r\n*/\r\n\r\n\r\n  return (\r\n    <div className=\"container\" style={{ color: props.mode ==='dark'?'white':'#042743'}}>\r\n        <h2 className='my-3'>About Us</h2>\r\n            <div className=\"accordion\" id=\"accordionExample\" style={myStyle}>\r\n        <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"headingOne\">\r\n            <button className=\"accordion-button\"\r\n             style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n               <strong> Analyze Your Text</strong>\r\n            </button>\r\n            </h2>\r\n            <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n            TextUtils gives you a way to analyze your text quikly and efficiently. Be it word count or character count \r\n            </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"accordion-item\" style={myStyle}>\r\n            <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n            <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                <strong>Free to use</strong>\r\n            </button>\r\n            </h2>\r\n            <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n               Textutils is a free character counter tool that provides instant character count and word count statistics for a given text. TextUtils reports the number of words and characters.Thus it is suitable for writing text with word/character limit.\r\n            </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"headingThree\">\r\n            <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n             <strong>Browser Compatible</strong>\r\n            </button>\r\n            </h2>\r\n            <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              This word counter software works in any web browser such as Chrome, Firefox, Internet Explorer,Safari,opera.It suites to count characters in facebook,blog,books,excel document,pdf document,essays, etc.\r\n            </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n       {/** <div className=\"container my-3\">\r\n        <button onClick={toggleStyle} type =\"button\" className=\"btn btn-primary\">{btnText}</button>\r\n        </div> */}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    \r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link active\" to=\"/About\">{props.about}</Link>\r\n        </li>\r\n       \r\n      </ul>\r\n      {/*<form className=\"d-flex\" role=\"search\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n      </form> */}\r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>  {/** using ternary operator for asking for the condition*/}\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n</div>\r\n    </div>\r\n  </div> \r\n</nav>\r\n \r\n  )\r\n}\r\n\r\n// propsType is used for Typechecking\r\nNavbar.propTypes= { title: PropTypes.string.isRequired,\r\n                   about:PropTypes.string.isRequired,\r\n}\r\n\r\n\r\n// defaultprops is used to write the passed value on the passed key\r\nNavbar.defaultProps ={\r\n    title: 'Set Title',\r\n    about: 'About'\r\n};","import React,{useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n       //console.log(\"Uppercase was clicked:\" + text);\r\n       let newText = text.toUpperCase();\r\n       setText(newText);\r\n       props.showAlert(\"Converted to uppercase!\",\"success\");\r\n    }\r\n    const handleLoClick = ()=>{\r\n       //console.log(\"Lowercase was clicked:\" + text);\r\n       let newText = text.toLowerCase();\r\n       setText(newText);\r\n       props.showAlert(\"Converted to lowercase!\",\"success\");\r\n\r\n    }\r\n    const handleClearClick = ()=>{\r\n       let newText = \"\";\r\n       setText(newText);\r\n       props.showAlert(\"Text is cleared\",\"success\");\r\n\r\n    }\r\n    const handleOnChange = (event)=>{\r\n      // console.log(\"On change\");\r\n       setText(event.target.value);\r\n    }\r\n    \r\n    const handleCopy=()=>{\r\n      let newText=document.getElementById(\"myBox\");\r\n      newText.select();\r\n      //newText.setSelectionRange(0,9999);\r\n      navigator.clipboard.writeText(newText.value);\r\n      document.getSelection().removeAllRanges();\r\n      props.showAlert(\"Copied to clipboard\",\"success\");\r\n\r\n    }\r\n    const handleExtraSpaces =()=>{\r\n      let newText=text.split(/[ ]+/);\r\n      setText(newText.join(\" \"));\r\n      props.showAlert(\"Extra spaces removed\",\"success\");\r\n\r\n    }\r\n    \r\n    const [text, setText] = useState(''); //state concept using hooks (Array restructuring syntax)\r\n   /** state updation is not allowed like normal variable means directly- (for updation of state be need to use function )\r\n    * text =\"new txt\"  //wrong way to change the state\r\n    \r\n   setText(\"new text\");  //correct way to change the state\r\n   */\r\n\r\n    return (\r\n     <>\r\n    <div className=\"container\" style={{color:props.mode==='dark'?'white':'#042743'}}>\r\n        <h1 className='mb-4'>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" value= {text} onChange={handleOnChange} style={{backgroundColor:props.mode==='dark'?'#13466e':'white',color:props.mode==='dark'?'white':'#042743'}} id=\"myBox\" rows=\"8\"></textarea>\r\n        </div>\r\n        <button disabled={text.length ===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n        <button disabled={text.length ===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n        <button disabled={text.length ===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleClearClick}>Clear Text</button>\r\n        <button disabled={text.length ===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleCopy}>Copy Text</button>\r\n        <button disabled={text.length ===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n    </div>\r\n    <div className=\"container my-3\" style={{color:props.mode==='dark'?'white':'#042743'}}>\r\n        <h2>Your text summary</h2>\r\n        <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p>\r\n        <p>{0.008 * text.split(\" \").filter((element)=>{return element.length!==0}).length} Minutes to Read</p>\r\n           <h2>Preview</h2>\r\n           <p>{text.length>0?text:\"Nothing to preview\"}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize =(word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+ lower.slice(1);\r\n    }\r\n  return (\r\n <div style={{height:'50px'}}>\r\n   {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n    <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n    </div>}\r\n </div>\r\n  )\r\n}\r\n","\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route\n} from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode,setMode] = useState('light');//whether dark mode is enabled or not\n  const [alert,setAlert]= useState(null);\n \n  const showAlert = (message,type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(()=>{\n      setAlert(null);\n    },1500);\n  }\n\n const toggleMode=()=>{\n  if(mode === 'light'){\n    setMode('dark');\n    document.body.style.backgroundColor = '#042743';\n    showAlert(\"Dark mode has been enabled\",\"success\");\n   // document.title = \"TextUtils - DarkMode\";\n   /* setInterval(()=>{   //Flashing title with some msg\n      document.title = \"TextUtils is Amazing\";\n    },2000); */\n\n  }\n  else{\n    setMode ('light');\n    document.body.style.backgroundColor = 'white';\n    showAlert(\"Light mode has been enabled\",\"success\");\n   // document.title = \"TextUtils - LightMode\";\n   }\n}\n\n  return (\n    <> \n    <Router basename='/TextUtils_React_Project'>\n   <Navbar title=\"Textutils\" about=\"About\" mode={mode} toggleMode={toggleMode} />\n   <Alert alert={alert}/>\n   <div className=\"container my-3\">\n    \n    {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n     <Routes>\n      {/**exact keyword is used so that react router will search for exact same file which is refferd and dont get confuse btween similar named files\n       * eg.  /users-->component 1\n       *     /users/home--> componenet 2\n       * \n       */}\n          <Route exact path=\"/About\" element = {<About mode={mode}/>}/>\n          <Route exact path=\"/\" element ={<TextForm showAlert={showAlert} heading=\" Try TextUtils - Word counter, character counter, Remove extra spaces\" mode={mode}/>}>\n          </Route>\n     </Routes>\n   {/**<About/>  */}\n   </div>\n   </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App/>\n    </BrowserRouter>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}